class CLI
  def login_user!
    puts "Input your email:"
    email = gets.chomp
    @current_user = User.find_or_create_by(email: email)
  end

  def get_user_choice
    while true
      puts "What do you want to do?"
      puts "0. Create shortened URL"
      puts "1. Visit shortened URL"

      choice = Integer(gets.chomp)
      break if [0, 1].include?(choice)
      puts "Invalid response"
    end

    choice
  end

  def create_url!
    puts "Type in your long url"
    long_url = gets.chomp

    shortened_url = ShortenedUrl.create_for_user_and_long_url!(@current_user, long_url)
    puts "Short url is: #{shortened_url.short_url}"

    shortened_url
  end

  def visit_url!
    puts "Type in your shortened url"
    short_url = gets.chomp
    if ShortenedUrl.exists?(short_url: short_url)
      shortened_url = ShortenedUrl.where(short_url: short_url).first
      Visit.record_visit!(@current_user, shortened_url)
      Launchy.open(shortened_url.long_url)
    else
      puts "Invalid shortened url"
    end
  end

  def tagging
    puts "Would you like to add a tag?"
    popular_tags = TagTopic.most_popular_tags.map { |tag_obj| tag_obj.topic }.join(", ")
    puts "(popular tags: #{popular_tags})"
    while true
      puts "0. yes"
      puts "1. no"
      choice = Integer(gets.chomp)
      break if [0, 1].include?(choice)
      puts "Invalid response, try again."
    end

    result = choice == 0 ? add_tag! : nil
    result
  end

  def add_tag!
    puts "name your tag"
    topic = gets.chomp

    TagTopic.find_or_create_by(topic: topic)
  end

  def create_tagging!(tag_topic, url)
    Tagging.create!(tag_topic_id: tag_topic.id, shortened_url_id: url.id)
  end

  def run
    login_user!

    case get_user_choice
    when 0
      tag_topic = tagging

      url = create_url!
      create_tagging!(tag_topic, url) if tag_topic
    when 1
      visit_url!
    end

    puts "Goodbye!"
  end
end

CLI.new.run
